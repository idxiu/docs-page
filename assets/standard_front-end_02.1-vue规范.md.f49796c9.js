import{_ as s,o as n,c as a,b as l,d as p,e as o,a as e,r as c}from"./app.399c4537.js";const t=JSON.parse('{"title":"vue规范","description":"","frontmatter":{},"headers":[{"level":2,"title":"Router规范","slug":"router规范","link":"#router规范","children":[{"level":3,"title":"页面跳转数据传递使用路由参数","slug":"页面跳转数据传递使用路由参数","link":"#页面跳转数据传递使用路由参数","children":[]},{"level":3,"title":"使用路由懒加载（延迟加载）机制","slug":"使用路由懒加载（延迟加载）机制","link":"#使用路由懒加载（延迟加载）机制","children":[]},{"level":3,"title":"router中的命名规范","slug":"router中的命名规范","link":"#router中的命名规范","children":[]}]},{"level":2,"title":"Vue组件及内容规范","slug":"vue组件及内容规范","link":"#vue组件及内容规范","children":[{"level":3,"title":"标签顺序保持一致","slug":"标签顺序保持一致","link":"#标签顺序保持一致","children":[]},{"level":3,"title":"组件/实例的选项的顺序","slug":"组件-实例的选项的顺序","link":"#组件-实例的选项的顺序","children":[]},{"level":3,"title":"组件名字","slug":"组件名字","link":"#组件名字","children":[]},{"level":3,"title":"模板中的组件名","slug":"模板中的组件名","link":"#模板中的组件名","children":[]},{"level":3,"title":"组件数据","slug":"组件数据","link":"#组件数据","children":[]},{"level":3,"title":"Prop定义","slug":"prop定义","link":"#prop定义","children":[]},{"level":3,"title":"多个attribute的元素","slug":"多个attribute的元素","link":"#多个attribute的元素","children":[]},{"level":3,"title":"模板中使用简单的表达式","slug":"模板中使用简单的表达式","link":"#模板中使用简单的表达式","children":[]},{"level":3,"title":"指令推荐都使用缩写形式","slug":"指令推荐都使用缩写形式","link":"#指令推荐都使用缩写形式","children":[]},{"level":3,"title":"v-show 与 v-if 选择","slug":"v-show-与-v-if-选择","link":"#v-show-与-v-if-选择","children":[]},{"level":3,"title":"为v-for设置键值","slug":"为v-for设置键值","link":"#为v-for设置键值","children":[]},{"level":3,"title":"避免 v-if 和 v-for 同时用在一个元素上（性能问题）","slug":"避免-v-if-和-v-for-同时用在一个元素上（性能问题）","link":"#避免-v-if-和-v-for-同时用在一个元素上（性能问题）","children":[]},{"level":3,"title":"将 v-if 移动至容器元素上 (比如 ul, ol)","slug":"将-v-if-移动至容器元素上-比如-ul-ol","link":"#将-v-if-移动至容器元素上-比如-ul-ol","children":[]},{"level":3,"title":"为组件样式设置作用域","slug":"为组件样式设置作用域","link":"#为组件样式设置作用域","children":[]}]}],"relativePath":"standard/front-end/02.1-vue规范.md","lastUpdated":1663313048000}'),r={name:"standard/front-end/02.1-vue规范.md"},F=p("h1",{id:"vue规范",tabindex:"-1"},[o("vue规范 "),p("a",{class:"header-anchor",href:"#vue规范","aria-hidden":"true"},"#")],-1),D=e('<h2 id="router规范" tabindex="-1">Router规范 <a class="header-anchor" href="#router规范" aria-hidden="true">#</a></h2><h3 id="页面跳转数据传递使用路由参数" tabindex="-1">页面跳转数据传递使用路由参数 <a class="header-anchor" href="#页面跳转数据传递使用路由参数" aria-hidden="true">#</a></h3><p>页面跳转，例如 A 页面跳转到 B 页面，需要将 A 页面的数据传递到 B 页面，推荐使用 路由参数进行传参，而不是将需要传递的数据保存 vuex，然后在 B 页面取出 vuex 的数据，因为如果在 B 页面刷新会导致 vuex 数据丢失，导致 B 页面无法正常显示数据。</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> 123</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$router</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">userCenter</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">query</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="使用路由懒加载（延迟加载）机制" tabindex="-1">使用路由懒加载（延迟加载）机制 <a class="header-anchor" href="#使用路由懒加载（延迟加载）机制" aria-hidden="true">#</a></h3><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/uploadAttachment</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">uploadAttachment</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">title</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">上传附件</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">component</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/view/components/uploadAttachment/index.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="router中的命名规范" tabindex="-1">router中的命名规范 <a class="header-anchor" href="#router中的命名规范" aria-hidden="true">#</a></h3><ul><li><code>path</code>命名规范选择单个单词组成，如果一个单词不能代表页面意思，可以采用<code>kebab-case</code>命名规范。与vue文件的目录命名的单词保持一致。必须以 / 开头，即使是<code>children</code>里的<code>path</code>也要以 / 开头，这样很方便找到对应的文件。</li><li><code>name</code>命名规范采用<code>kebab-case</code>命名规范且和<code>component</code>组件名保持一致！（因为要保keep-alive特性，keep-alive按照<code>component</code>的<code>name</code>进行缓存，所以两者必须高度保持一致）</li><li><code>meta</code>里面至少要有<code>title</code>属性，并且命名与页面路由和文件名意思相同。</li></ul><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> reload </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/reload</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reload</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/views/reload/reload.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加载页面</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/reload/list</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reload-list</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/views/reload/reload-list/reload-list.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加载列表</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/reload/list/file</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reload-list-file</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@/views/reload/reload-list/reload-list-file.vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">              </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">加载列表文件</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h2 id="vue组件及内容规范" tabindex="-1">Vue组件及内容规范 <a class="header-anchor" href="#vue组件及内容规范" aria-hidden="true">#</a></h2><h3 id="标签顺序保持一致" tabindex="-1">标签顺序保持一致 <a class="header-anchor" href="#标签顺序保持一致" aria-hidden="true">#</a></h3><p>单文件组件应该总是让标签顺序保持为：</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;...&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">..</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">&lt;/style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="组件-实例的选项的顺序" tabindex="-1">组件/实例的选项的顺序 <a class="header-anchor" href="#组件-实例的选项的顺序" aria-hidden="true">#</a></h3><p>组件/实例的选项应该有统一的顺序。下面是我们推荐的组件选项默认顺序。它们被划分为几大类，所以你也能知道从插件里添加的新 <code>property</code> 应该放到哪里。</p><ul><li>常见顺序展示：</li></ul><div class="language-md"><button class="copy"></button><span class="lang">md</span><pre><code><span class="line"><span style="color:#A6ACCD;">name &gt; components &gt; filters &gt; mixins &gt;  props &gt; data &gt; computed &gt; watch &gt; 钩子函数（按其执行顺序） &gt; methods</span></span>\n<span class="line"></span></code></pre></div><ul><li>详细展示：</li></ul><div class="language-md"><button class="copy"></button><span class="lang">md</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">//副作用 (触发组件外的影响)</span></span>\n<span class="line"><span style="color:#A6ACCD;">el</span></span>\n<span class="line"><span style="color:#A6ACCD;">//全局感知 (要求组件以外的知识)</span></span>\n<span class="line"><span style="color:#A6ACCD;">name</span></span>\n<span class="line"><span style="color:#A6ACCD;">parent</span></span>\n<span class="line"><span style="color:#A6ACCD;">//组件类型 (更改组件的类型)</span></span>\n<span class="line"><span style="color:#A6ACCD;">functional</span></span>\n<span class="line"><span style="color:#A6ACCD;">//模板修改器 (改变模板的编译方式)</span></span>\n<span class="line"><span style="color:#A6ACCD;">delimiters</span></span>\n<span class="line"><span style="color:#A6ACCD;">comments</span></span>\n<span class="line"><span style="color:#A6ACCD;">//模板依赖 (模板内使用的资源)</span></span>\n<span class="line"><span style="color:#A6ACCD;">components</span></span>\n<span class="line"><span style="color:#A6ACCD;">directives</span></span>\n<span class="line"><span style="color:#A6ACCD;">filters</span></span>\n<span class="line"><span style="color:#A6ACCD;">//组合 (向选项里合并 property)</span></span>\n<span class="line"><span style="color:#A6ACCD;">extends</span></span>\n<span class="line"><span style="color:#A6ACCD;">mixins</span></span>\n<span class="line"><span style="color:#A6ACCD;">//接口 (组件的接口)</span></span>\n<span class="line"><span style="color:#A6ACCD;">inheritAttrs</span></span>\n<span class="line"><span style="color:#A6ACCD;">model</span></span>\n<span class="line"><span style="color:#A6ACCD;">props/propsData</span></span>\n<span class="line"><span style="color:#A6ACCD;">//本地状态 (本地的响应式 property)</span></span>\n<span class="line"><span style="color:#A6ACCD;">data</span></span>\n<span class="line"><span style="color:#A6ACCD;">computed</span></span>\n<span class="line"><span style="color:#A6ACCD;">//事件 (通过响应式事件触发的回调)</span></span>\n<span class="line"><span style="color:#A6ACCD;">watch</span></span>\n<span class="line"><span style="color:#A6ACCD;">//生命周期钩子 (按照它们被调用的顺序)</span></span>\n<span class="line"><span style="color:#A6ACCD;">beforeCreate</span></span>\n<span class="line"><span style="color:#A6ACCD;">created</span></span>\n<span class="line"><span style="color:#A6ACCD;">beforeMount</span></span>\n<span class="line"><span style="color:#A6ACCD;">mounted</span></span>\n<span class="line"><span style="color:#A6ACCD;">beforeUpdate</span></span>\n<span class="line"><span style="color:#A6ACCD;">updated</span></span>\n<span class="line"><span style="color:#A6ACCD;">activated</span></span>\n<span class="line"><span style="color:#A6ACCD;">deactivated</span></span>\n<span class="line"><span style="color:#A6ACCD;">beforeDestroy</span></span>\n<span class="line"><span style="color:#A6ACCD;">destroyed</span></span>\n<span class="line"><span style="color:#A6ACCD;">//非响应式的 property (不依赖响应系统的实例 property)</span></span>\n<span class="line"><span style="color:#A6ACCD;">methods</span></span>\n<span class="line"><span style="color:#A6ACCD;">//渲染 (组件输出的声明式描述)</span></span>\n<span class="line"><span style="color:#A6ACCD;">template/render</span></span>\n<span class="line"><span style="color:#A6ACCD;">renderError</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="组件名字" tabindex="-1">组件名字 <a class="header-anchor" href="#组件名字" aria-hidden="true">#</a></h3><p>组件名应该始终是多个单词的，根组件 <code>App</code> 以及 <code>transition</code> 、<code>component</code> 之类的 <code>Vue</code> 内置组件除外。 这样做可以避免跟现有的以及未来的 <code>HTML</code> 元素相冲突，因为所有的 <code>HTML</code> 元素名称都是单个单词的。</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">todo-item</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#676E95;">// ...</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> TodoItem </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./todo-item</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> TodoItem </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./todo/todo-item.vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">todo-item</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// ... </span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="模板中的组件名" tabindex="-1">模板中的组件名 <a class="header-anchor" href="#模板中的组件名" aria-hidden="true">#</a></h3><p>对于绝大多数项目来说，在单文件组件和字符串模板中组件名应该总是大坨峰命名，并且使用自闭合组件。但是在 DOM 模板中总是中划线命名，并且需要有闭合标签。</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">//在单文件组件和字符串模板中</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MyHeader</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#89DDFF;">/&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:column</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">MyHeader</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">//在 DOM 模板中</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">my-component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:column</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">table</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">my-component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="组件数据" tabindex="-1">组件数据 <a class="header-anchor" href="#组件数据" aria-hidden="true">#</a></h3><p>组件的 data 必须是一个函数。 当在组件中使用 data property 的时候 (除了 new Vue 外的任何地方)，它的值必须是返回一个对象的函数。</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">todo-item</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      foo</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#676E95;">// 在一个 Vue 的根实例上直接使用对象是可以的，因为只存在一个这样的实例。</span></span>\n<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="prop定义" tabindex="-1">Prop定义 <a class="header-anchor" href="#prop定义" aria-hidden="true">#</a></h3><p><code>Prop</code> 定义应该尽量详细。在你提交的代码中，<code>prop</code> 的定义应该尽量详细；至少需要指定其类型；必须加上注释，表明其含义；必须加上<code>required</code>或者<code>default</code>，两者二选其一；如果有业务需要，必须加上 <code>validator</code> 验证</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#676E95;">// 组件状态，用于控制组件的颜色</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">required</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">validator</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> [</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">syncing</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">version-conflict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">      ]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">indexOf</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#89DDFF;"> \t</span><span style="color:#676E95;">// 用户级别，用于显示皇冠个数</span></span>\n<span class="line"><span style="color:#A6ACCD;">userLevel</span><span style="color:#F07178;">：</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#FFCB6B;">required</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="多个attribute的元素" tabindex="-1">多个attribute的元素 <a class="header-anchor" href="#多个attribute的元素" aria-hidden="true">#</a></h3><p>大于两个attribute的元素应该分多行撰写，每个attribute一行。</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MyComponent</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">foo</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">bar</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">baz</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="模板中使用简单的表达式" tabindex="-1">模板中使用简单的表达式 <a class="header-anchor" href="#模板中使用简单的表达式" aria-hidden="true">#</a></h3><p>正例：</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;{{</span><span style="color:#A6ACCD;"> normalizedFullName </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;">// 复杂表达式已经移入一个计算属性</span></span>\n<span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">normalizedFullName</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">fullName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">word</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">word</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toUpperCase</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">word</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">join</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><p>反例：</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">{{</span></span>\n<span class="line"><span style="color:#A6ACCD;">          fullName.split(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">).map(function (word) {</span></span>\n<span class="line"><span style="color:#F07178;">             return word[0].toUpperCase() + word.slice(1)</span></span>\n<span class="line"><span style="color:#F07178;">           }).join(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">        }}</span></span>\n<span class="line"><span style="color:#F07178;">  &lt;/p&gt;</span></span>\n<span class="line"><span style="color:#F07178;">&lt;/template&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="指令推荐都使用缩写形式" tabindex="-1">指令推荐都使用缩写形式 <a class="header-anchor" href="#指令推荐都使用缩写形式" aria-hidden="true">#</a></h3><p>用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@input</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">onInput</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">@focus</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">onFocus</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="v-show-与-v-if-选择" tabindex="-1">v-show 与 v-if 选择 <a class="header-anchor" href="#v-show-与-v-if-选择" aria-hidden="true">#</a></h3><p>如果运行时，需要非常频繁地切换，使用v-show；如果在运行时，条件很少改变，使用 v-if。另外v-if比较耗性能，大量元素和内容进行判断，建议用v-show。</p><h3 id="为v-for设置键值" tabindex="-1">为v-for设置键值 <a class="header-anchor" href="#为v-for设置键值" aria-hidden="true">#</a></h3><p>总是用 key 配合 v-for。在组件上总是必须用 key 配合 v-for，以便维护内部组件及其子树的状态。甚至在元素上维护可预测的行为，比如动画中的对象固化 (object constancy)，也是一种好的做法。</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">todo in todos</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">todo.id</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {{ todo.text }}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="避免-v-if-和-v-for-同时用在一个元素上（性能问题）" tabindex="-1">避免 v-if 和 v-for 同时用在一个元素上（性能问题） <a class="header-anchor" href="#避免-v-if-和-v-for-同时用在一个元素上（性能问题）" aria-hidden="true">#</a></h3><p>（1）将数据替换为一个计算属性，让其返回过滤后的列表</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user in activeUsers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user.id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">      {{ user.name }}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">activeUsers</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">users</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isActive</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="将-v-if-移动至容器元素上-比如-ul-ol" tabindex="-1">将 v-if 移动至容器元素上 (比如 ul, ol) <a class="header-anchor" href="#将-v-if-移动至容器元素上-比如-ul-ol" aria-hidden="true">#</a></h3><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shouldShowUsers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user in users</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">:key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user.id</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {{ user.name }}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><h3 id="为组件样式设置作用域" tabindex="-1">为组件样式设置作用域 <a class="header-anchor" href="#为组件样式设置作用域" aria-hidden="true">#</a></h3><p>公共样式单独新建css或less、sass文件进行引入，组件内style使用scoped特性。</p><div class="language-html"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">btn-close</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>尽量不要手动操作 <code>DOM</code>，因使用 <code>vue</code> 框架，所以在项目开发中尽量使用 <code>vue</code> 的数据驱动更新 <code>DOM</code>，尽量（不到万不得已）不要手动操作 <code>DOM</code>，包括：增删改 <code>dom</code> 元素、以及更改样式、添加事件等。</p><p>删除无用代码</p><p>因使用了 <code>git/svn</code> 等代码版本工具，对于无用代码必须及时删除，例如：一些调试的 <code>console</code> 语句、无用的弃用功能代码。</p></div>',56);const y=s(r,[["render",function(s,p,o,e,t,r){const y=c("VueJobs");return n(),a("div",null,[F,l(y),D])}]]);export{t as __pageData,y as default};
