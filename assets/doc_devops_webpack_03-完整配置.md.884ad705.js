import{_ as s,o as n,c as a,b as l,d as p,e,a as o,r as t}from"./app.399c4537.js";const c=JSON.parse('{"title":"完整的配置","description":"","frontmatter":{},"headers":[],"relativePath":"doc/devops/webpack/03-完整配置.md","lastUpdated":1663313048000}'),r={name:"doc/devops/webpack/03-完整配置.md"},A=p("h1",{id:"完整的配置",tabindex:"-1"},[e("完整的配置 "),p("a",{class:"header-anchor",href:"#完整的配置","aria-hidden":"true"},"#")],-1),C=o('<p>参考网址：<a href="https://webpack.docschina.org/configuration/#options" target="_blank" rel="noreferrer">https://webpack.docschina.org/configuration/#options</a></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">const path = require(&#39;path&#39;);</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">module.exports = {</span></span>\n<span class="line"><span style="color:#A6ACCD;">  mode: &quot;production&quot;, // &quot;production&quot; | &quot;development&quot; | &quot;none&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // Chosen mode tells webpack to use its built-in optimizations accordingly.</span></span>\n<span class="line"><span style="color:#A6ACCD;">  entry: &quot;./app/entry&quot;, // string | object | array</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // 默认为 ./src</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // 这里应用程序开始执行</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // webpack 开始打包</span></span>\n<span class="line"><span style="color:#A6ACCD;">  output: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  module: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // 模块配置相关</span></span>\n<span class="line"><span style="color:#A6ACCD;">    rules: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">      // 模块规则（配置 loader、解析器等选项）</span></span>\n<span class="line"><span style="color:#A6ACCD;">      {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        // Conditions:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        test: /\\.jsx?$/,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        include: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          path.resolve(__dirname, &quot;app&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        exclude: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          path.resolve(__dirname, &quot;app/demo-files&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span></span>\n<span class="line"><span style="color:#A6ACCD;">      },</span></span>\n<span class="line"><span style="color:#A6ACCD;">      {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        oneOf: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // ... (rules)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">        // only use one of these nested rules</span></span>\n<span class="line"><span style="color:#A6ACCD;">      },</span></span>\n<span class="line"><span style="color:#A6ACCD;">      {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        // ... (conditions)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        rules: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // ... (rules)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">        // use all of these nested rules (combine with conditions to be useful)</span></span>\n<span class="line"><span style="color:#A6ACCD;">      },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">    /* 高级模块配置（点击展示） */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  resolve: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // options for resolving module requests</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // (does not apply to resolving of loaders)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    modules: [&quot;node_modules&quot;,path.resolve(__dirname, &quot;app&quot;)],</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // directories where to look for modules (in order)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    extensions: [&quot;.js&quot;, &quot;.json&quot;, &quot;.jsx&quot;, &quot;.css&quot;],</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // 使用的扩展名</span></span>\n<span class="line"><span style="color:#A6ACCD;">    alias: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span></span>\n<span class="line"><span style="color:#A6ACCD;">    },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    /* 可供选择的别名语法（点击展示） */</span></span>\n<span class="line"><span style="color:#A6ACCD;">    /* 高级解析选项（点击展示） */</span></span>\n<span class="line"><span style="color:#A6ACCD;">    /* Expert resolve configuration (click to show) */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  performance: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    hints: &quot;warning&quot;, // 枚举</span></span>\n<span class="line"><span style="color:#A6ACCD;">    maxAssetSize: 200000, // 整数类型（以字节为单位）</span></span>\n<span class="line"><span style="color:#A6ACCD;">    maxEntrypointSize: 400000, // 整数类型（以字节为单位）</span></span>\n<span class="line"><span style="color:#A6ACCD;">    assetFilter: function(assetFilename) {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      // 提供资源文件名的断言函数</span></span>\n<span class="line"><span style="color:#A6ACCD;">      return assetFilename.endsWith(&#39;.css&#39;) || assetFilename.endsWith(&#39;.js&#39;);</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  devtool: &quot;source-map&quot;, // enum</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // 通过为浏览器调试工具提供极其详细的源映射的元信息来增强调试能力，</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // 但会牺牲构建速度。</span></span>\n<span class="line"><span style="color:#A6ACCD;">  context: __dirname, // string（绝对路径！）</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // webpack 的主目录</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // entry 和 module.rules.loader 选项</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // 都相对于此目录解析</span></span>\n<span class="line"><span style="color:#A6ACCD;">  target: &quot;web&quot;, // 枚举</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // the environment in which the bundle should run</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // changes chunk loading behavior, available external modules</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // and generated code style</span></span>\n<span class="line"><span style="color:#A6ACCD;">  externals: [&quot;react&quot;, /^@angular/],</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // Don&#39;t follow/bundle these modules, but request them at runtime from the environment</span></span>\n<span class="line"><span style="color:#A6ACCD;">  externalsType: &quot;var&quot;, // (defaults to output.library.type)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // Type of externals, when not specified inline in externals</span></span>\n<span class="line"><span style="color:#A6ACCD;">  externalsPresets: { /* ... */ },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // presets of externals</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ignoreWarnings: [/warning/],</span></span>\n<span class="line"><span style="color:#A6ACCD;">  stats: &quot;errors-only&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  stats: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // lets you precisely control what bundle information gets displayed</span></span>\n<span class="line"><span style="color:#A6ACCD;">    preset: &quot;errors-only&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // A stats preset</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    env: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // include value of --env in the output</span></span>\n<span class="line"><span style="color:#A6ACCD;">    outputPath: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // include absolute output path in the output</span></span>\n<span class="line"><span style="color:#A6ACCD;">    publicPath: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // include public path in the output</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    assets: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show list of assets in output</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    entrypoints: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show entrypoints list</span></span>\n<span class="line"><span style="color:#A6ACCD;">    chunkGroups: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show named chunk group list</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    chunks: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show list of chunks in output</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    modules: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show list of modules in output</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    children: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show stats for child compilations</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    logging: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show logging in output</span></span>\n<span class="line"><span style="color:#A6ACCD;">    loggingDebug: /webpack/,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show debug type logging for some loggers</span></span>\n<span class="line"><span style="color:#A6ACCD;">    loggingTrace: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show stack traces for warnings and errors in logging output</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    warnings: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show warnings</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    errors: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show errors</span></span>\n<span class="line"><span style="color:#A6ACCD;">    errorDetails: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show details for errors</span></span>\n<span class="line"><span style="color:#A6ACCD;">    errorStack: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show internal stack trace for errors</span></span>\n<span class="line"><span style="color:#A6ACCD;">    moduleTrace: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show module trace for errors</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // (why was causing module referenced)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    builtAt: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show timestamp in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">    errorsCount: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show errors count in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">    warningsCount: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show warnings count in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">    timings: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show build timing in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">    version: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show webpack version in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">    hash: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // show build hash in summary</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  devServer: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    proxy: { // proxy URLs to backend development server</span></span>\n<span class="line"><span style="color:#A6ACCD;">      &#39;/api&#39;: &#39;http://localhost:3000&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    },</span></span>\n<span class="line"><span style="color:#A6ACCD;">    contentBase: path.join(__dirname, &#39;public&#39;), // boolean | string | array, static file location</span></span>\n<span class="line"><span style="color:#A6ACCD;">    compress: true, // enable gzip compression</span></span>\n<span class="line"><span style="color:#A6ACCD;">    historyApiFallback: true, // true for index.html upon 404, object for multiple paths</span></span>\n<span class="line"><span style="color:#A6ACCD;">    hot: true, // hot module replacement. Depends on HotModuleReplacementPlugin</span></span>\n<span class="line"><span style="color:#A6ACCD;">    https: false, // true for self-signed, object for cert authority</span></span>\n<span class="line"><span style="color:#A6ACCD;">    noInfo: true, // only errors &amp; warns on hot reload</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // ...</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  experiments: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    asyncWebAssembly: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // WebAssembly as async module (Proposal)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    syncWebAssembly: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // WebAssembly as sync module (deprecated)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    outputModule: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // Allow to output ESM</span></span>\n<span class="line"><span style="color:#A6ACCD;">    topLevelAwait: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // Allow to use await on module evaluation (Proposal)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">  plugins: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // ...</span></span>\n<span class="line"><span style="color:#A6ACCD;">  ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">  // list of additional plugins</span></span>\n<span class="line"><span style="color:#A6ACCD;">  optimization: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    chunkIds: &quot;size&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // method of generating ids for chunks</span></span>\n<span class="line"><span style="color:#A6ACCD;">    moduleIds: &quot;size&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // method of generating ids for modules</span></span>\n<span class="line"><span style="color:#A6ACCD;">    mangleExports: &quot;size&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // rename export names to shorter names</span></span>\n<span class="line"><span style="color:#A6ACCD;">    minimize: true,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // minimize the output files</span></span>\n<span class="line"><span style="color:#A6ACCD;">    minimizer: [new CssMinimizer(), &quot;...&quot;],</span></span>\n<span class="line"><span style="color:#A6ACCD;">    // minimizers to use for the output files</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    splitChunks: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">      cacheGroups: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        &quot;my-name&quot;: {</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // define groups of modules with specific</span></span>\n<span class="line"><span style="color:#A6ACCD;">          // caching behavior</span></span>\n<span class="line"><span style="color:#A6ACCD;">          test: /\\.sass$/,</span></span>\n<span class="line"><span style="color:#A6ACCD;">          type: &quot;css/mini-extract&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">        }</span></span>\n<span class="line"><span style="color:#A6ACCD;">      },</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">      fallbackCacheGroup: { /* Advanced (click to show) */ }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">  },</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>',2);const i=s(r,[["render",function(s,p,e,o,c,r){const i=t("VueJobs");return n(),a("div",null,[A,l(i),C])}]]);export{c as __pageData,i as default};
