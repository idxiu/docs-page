import{_ as s,o as n,c as a,b as l,d as e,e as o,a as t,r as p}from"./app.399c4537.js";const r=JSON.parse('{"title":"创建用户并分配权限","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"角色说明","slug":"角色说明","link":"#角色说明","children":[{"level":3,"title":"数据库用户角色(Database User Roles) - 常用","slug":"数据库用户角色-database-user-roles-常用","link":"#数据库用户角色-database-user-roles-常用","children":[]},{"level":3,"title":"数据库管理角色(Database Administration Roles) - 常用","slug":"数据库管理角色-database-administration-roles-常用","link":"#数据库管理角色-database-administration-roles-常用","children":[]},{"level":3,"title":"集群管理角色(Cluster Administration Roles)","slug":"集群管理角色-cluster-administration-roles","link":"#集群管理角色-cluster-administration-roles","children":[],"compositionOnly":true},{"level":3,"title":"备份和恢复角色(Backup and Restoration Roles) - 常用","slug":"备份和恢复角色-backup-and-restoration-roles-常用","link":"#备份和恢复角色-backup-and-restoration-roles-常用","children":[]},{"level":3,"title":"全数据库级角色(All-Database Roles)","slug":"全数据库级角色-all-database-roles","link":"#全数据库级角色-all-database-roles","children":[]},{"level":3,"title":"超级用户角色(Superuser Roles)","slug":"超级用户角色-superuser-roles","link":"#超级用户角色-superuser-roles","children":[]},{"level":3,"title":"内部角色(Internal Role)","slug":"内部角色-internal-role","link":"#内部角色-internal-role","children":[]},{"level":3,"title":"总结说明","slug":"总结说明","link":"#总结说明","children":[]}]},{"level":2,"title":"创建自定义角色","slug":"创建自定义角色","link":"#创建自定义角色","children":[{"level":3,"title":"查看环境","slug":"查看环境","link":"#查看环境","children":[]},{"level":3,"title":"查看自定义的角色","slug":"查看自定义的角色","link":"#查看自定义的角色","children":[]},{"level":3,"title":"更新自定义的角色","slug":"更新自定义的角色","link":"#更新自定义的角色","children":[]},{"level":3,"title":"添加角色权限","slug":"添加角色权限","link":"#添加角色权限","children":[]},{"level":3,"title":"删除角色","slug":"删除角色","link":"#删除角色","children":[]}]},{"level":2,"title":"创建用户并分配角色","slug":"创建用户并分配角色","link":"#创建用户并分配角色","children":[{"level":3,"title":"查看用户信息","slug":"查看用户信息","link":"#查看用户信息","children":[]},{"level":3,"title":"为用户添加角色","slug":"为用户添加角色","link":"#为用户添加角色","children":[]},{"level":3,"title":"删除用户","slug":"删除用户","link":"#删除用户","children":[]}]},{"level":2,"title":"更改用户密码","slug":"更改用户密码","link":"#更改用户密码","children":[]},{"level":2,"title":"开启MongoDB的访问控制","slug":"开启mongodb的访问控制","link":"#开启mongodb的访问控制","children":[]}],"relativePath":"doc/basic/mongo/01-创建用户并分配权限.md","lastUpdated":1663313048000}'),i={name:"doc/basic/mongo/01-创建用户并分配权限.md"},c=e("h1",{id:"创建用户并分配权限",tabindex:"-1"},[o("创建用户并分配权限 "),e("a",{class:"header-anchor",href:"#创建用户并分配权限","aria-hidden":"true"},"#")],-1),d=t('<p><a href="https://docs.mongodb.com/manual/core/authentication/" target="_blank" rel="noreferrer">参考官方文档</a></p><h2 id="角色说明" tabindex="-1">角色说明 <a class="header-anchor" href="#角色说明" aria-hidden="true">#</a></h2><p>以下是MongoDB中内置的角色：</p><h3 id="数据库用户角色-database-user-roles-常用" tabindex="-1"><strong>数据库用户角色(Database User Roles) - 常用</strong> <a class="header-anchor" href="#数据库用户角色-database-user-roles-常用" aria-hidden="true">#</a></h3><ul><li><strong>read</strong></li></ul><p>read角色包含读取所有非系统集合数据和订阅部分系统集合(system.indexes、system.js、system.namespaces)的权限。</p><p>该角色权限包含命令操作：changeStream、collStats、dbHash、dbStats、find、killCursors、listIndexes、listCollections。</p><ul><li><strong>readWrite</strong></li></ul><p>readWrite角色包含read角色的权限同时增加了对非系统集合数据的修改权限，但只对系统集合system.js有修改权限。</p><p>该角色权限包含命令操作：collStats、convertToCapped、createCollection、dbHash、dbStats、dropCollection、createIndex、dropIndex、find、insert、killCursors、listIndexes、listCollections、remove、renameCollectionSameDB、update。</p><h3 id="数据库管理角色-database-administration-roles-常用" tabindex="-1"><strong>数据库管理角色(Database Administration Roles) - 常用</strong> <a class="header-anchor" href="#数据库管理角色-database-administration-roles-常用" aria-hidden="true">#</a></h3><ul><li><strong>dbAdmin</strong></li></ul><p>dbAdmin角色包含执行某些管理任务(与schema相关、索引、收集统计信息)的权限，该角色不包含用户和角色管理的权限。</p><p>对于系统集合(system.indexes、system.namespaces、system.profile)包含命令操作：collStats、dbHash、dbStats、find、killCursors、listIndexes、listCollections、dropCollection and createCollection(仅适用system.profile)</p><p>对于非系统集合包含命令操作：bypassDocumentValidation、collMod、collStats、compact、convertToCapped、createCollection、createIndex、dbStats、dropCollection、dropDatabase、dropIndex、enableProfiler、reIndex、renameCollectionSameDB、repairDatabase、storageDetails、validate</p><ul><li><strong>dbOwner</strong></li></ul><p>dbOwner角色包含对数据所有的管理操作权限。即包含角色readWrite、dbAdmin和userAdmin的权限。</p><ul><li><strong>userAdmin</strong></li></ul><p>userAdmin角色包含对当前数据库创建和修改角色和用户的权限。该角色允许向其它任何用户(包括自身)授予任何权限，所以这个角色也提供间接对超级用户(root)的访问权限，如果限定在admin数据中，也包括集群管理的权限。</p><p>该角色权限包含命令操作：changeCustomData、changePassword、createRole、createUser、dropRole、dropUser、grantRole、revokeRole、setAuthenticationRestriction、viewRole、viewUser。</p><h3 id="集群管理角色-cluster-administration-roles" tabindex="-1">集群管理角色(Cluster Administration Roles) <a class="header-anchor" href="#集群管理角色-cluster-administration-roles" aria-hidden="true">#</a></h3><ul><li><strong>clusterManager</strong></li></ul><p>clusterManager角色包含对集群监控和管理操作的权限。拥有此角色的用户能够访问集群中的config数据库和local数据库。</p><p>对于整个集群该角色包含命令操作：addShard、appendOplogNote、applicationMessage、cleanupOrphaned、flushRouterConfig、listSessions (3.6新增)、listShards、removeShard、replSetConfigure、replSetGetConfig、replSetGetStatus、replSetStateChange、resync。</p><p>对于集群中所有的数据库包含命令操作：enableSharding、moveChunk、splitChunk、splitVector。</p><p>对于集群中config数据库和local数据库包含的命令操作可以参考官方文档：<a href="https://docs.mongodb.com/manual/reference/built-in-roles/#clusterManager" target="_blank" rel="noreferrer"><strong>https://docs.mongodb.com/manual/reference/built-in-roles/#clusterManager</strong></a>。</p><ul><li><strong>clusterMonitor</strong></li></ul><p>clusterMonitor角色包含针对监控工具具有只读操作的权限。如工具<strong>MongoDB Cloud Manager</strong>和工具<strong>Ops Manager</strong>。</p><p>对于整个集群该角色包含命令操作：checkFreeMonitoringStatus(4.0新增)、connPoolStats、getCmdLineOpts、getLog、getParameter、getShardMap、hostInfo、inprog、listDatabases、listSessions (3.6新增)、listShards、netstat、replSetGetConfig、replSetGetStatus、serverStatus、setFreeMonitoring (4.0新增)、shardingState、top。</p><p>对于集群中所有的数据为包含命令操作：collStats、dbStats、getShardVersion、indexStats、useUUID(3.6新增)。</p><p>对于集群中config数据库和local数据库包含的命令操作可以参考官方文档：<a href="https://docs.mongodb.com/manual/reference/built-in-roles/#clusterMonitor" target="_blank" rel="noreferrer"><strong>https://docs.mongodb.com/manual/reference/built-in-roles/#clusterMonitor</strong></a>。</p><ul><li><strong>hostManager</strong></li></ul><p>hostManager角色包含针对数据库服务器的监控和管理操作权限。</p><p>对于整个集群该角色包含命令操作：applicationMessage、closeAllDatabases、connPoolSync、cpuProfiler、flushRouterConfig、fsync、invalidateUserCache、killAnyCursor (4.0新增)、killAnySession (3.6新增)、killop、logRotate、resync、setParameter、shutdown、touch、unlock。</p><p>对于集群中所有的数据库包含命令操作：killCursors、repairDatabase。</p><ul><li><strong>clusterAdmin</strong></li></ul><p>clusterAdmin角色包含MongoDB集群管理最高的操作权限。该角色包含<strong>clusterManager</strong>、<strong>clusterMonitor</strong>和<strong>hostManager</strong>三个角色的所有权限，并且还拥有dropDatabase操作命令的权限。</p><h3 id="备份和恢复角色-backup-and-restoration-roles-常用" tabindex="-1"><strong>备份和恢复角色(Backup and Restoration Roles) - 常用</strong> <a class="header-anchor" href="#备份和恢复角色-backup-and-restoration-roles-常用" aria-hidden="true">#</a></h3><ul><li><strong>backup</strong></li></ul><p>backup角色包含备份MongoDB数据最小的权限。</p><p>对于MongoDB中所有的数据库资源包含命令操作：listDatabases、listCollections、listIndexes。</p><p>对于整个集群包含命令操作：appendOplogNote、getParameter、listDatabases。</p><p>对于以下数据库资源提供find操作权限：</p><ol><li>对于集群中的所有非系统集合，包括自身的config数据库和local数据库；</li><li>对于集群中的系统集合：system.indexes、system.namespaces、system.js和system.profile；</li><li>admin数据库中的集合：admin.system.users和admin.system.roles；</li><li>config.settings集合；</li><li>2.6版本之前的system.users集合。</li></ol><p>对于config.setting集合还有insert和update操作权限。</p><ul><li><strong>restore</strong></li></ul><p>restore角色包含从备份文件中还原恢复MongoDB数据(除了system.profile集合)的权限。</p><p>restore角色有以下注意事项：</p><ol><li>如果备份中包含system.profile集合而恢复目标数据库没有system.profile集合，mongorestore会尝试重建该集合。因此执行用户需要有额外针对system.profile集合的createCollection和convertToCapped操作权限；</li><li>如果执行mongorestore命令时指定选项<code>--oplogReplay</code>，则restore角色包含的权限无法进行重放oplog。如果需要进行重放oplog，则需要只对执行mongorestore的用户授予包含对实例中任何资源具有任何权限的自定义角色。</li></ol><p>对于整个集群包含命令操作：getParameter。</p><p>对于所有非系统集合包含命令操作：bypassDocumentValidation、changeCustomData、changePassword、collMod、convertToCapped、createCollection、createIndex、createRole、createUser、dropCollection、dropRole、dropUser、grantRole、insert、revokeRole、viewRole、viewUser。</p><p>关于restore角色包含其它的命令操作可以参考官方文档：<a href="https://docs.mongodb.com/manual/reference/built-in-roles/#restore" target="_blank" rel="noreferrer"><strong>https://docs.mongodb.com/manual/reference/built-in-roles/#restore</strong></a>。</p><h3 id="全数据库级角色-all-database-roles" tabindex="-1"><strong>全数据库级角色(All-Database Roles)</strong> <a class="header-anchor" href="#全数据库级角色-all-database-roles" aria-hidden="true">#</a></h3><p>以下角色只存在于admin数据库，并且适用于除了config和local之外所有的数据库。</p><ul><li><strong>readAnyDatabase</strong></li></ul><p>readAnyDatabase角色包含对除了config和local之外所有数据库的只读权限。同时对于整个集群包含listDatabases命令操作。</p><p>在MongoDB3.4版本之前，该角色包含对config和local数据库的读取权限。当前版本如果需要对这两个数据库进行读取，则需要在admin数据库授予用户对这两个数据库的read角色。</p><ul><li><strong>readWriteAnyDatabase</strong></li></ul><p>readWriteAnyDatabase角色包含对除了config和local之外所有数据库的读写权限。同时对于整个集群包含listDatabases命令操作。</p><p>在MongoDB3.4版本之前，该角色包含对config和local数据库的读写权限。当前版本如果需要对这两个数据库进行读写，则需要在admin数据库授予用户对这两个数据库的readWrite角色。</p><ul><li><strong>userAdminAnyDatabase</strong></li></ul><p>userAdminAnyDatabase角色包含类似于userAdmin角色对于所有数据库的用户管理权限，除了config数据库和local数据库。</p><p>对于集群包含命令操作：authSchemaUpgrade、invalidateUserCache、listDatabases。</p><p>对于系统集合admin.system.users和admin.system.roles包含命令操作：collStats、dbHash、dbStats、find、killCursors、planCacheRead、createIndex、dropIndex。</p><p>该角色不会限制用户授予权限的操作，因此，拥有角色的用户也有可能授予超过角色范围内的权限给自己或其它用户，也可以使自己成为超级用户，<strong>userAdminAnyDatabase</strong>角色也可以认为是MongoDB中的超级用户角色。</p><ul><li><strong>dbAdminAnyDatabase</strong></li></ul><p>dbAdminAnyDatabase角色包含类似于dbAdmin角色对于所有数据库管理权限，除了config数据库和local数据库。同时对于整个集群包含listDatabases命令操作。</p><p>在MongoDB3.4版本之前，该角色包含对config和local数据库的管理权限。当前版本如果需要对这两个数据库进行管理，则需要在admin数据库授予用户对这两个数据库的dbAdmin角色。</p><h3 id="超级用户角色-superuser-roles" tabindex="-1"><strong>超级用户角色(Superuser Roles)</strong> <a class="header-anchor" href="#超级用户角色-superuser-roles" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>慎用</p></div><p>以下角色包含在任何数据库授予任何用户任何权限的权限。这意味着用户如果有以下角色之一可以为自己在任何数据库授予任何权限。</p><ul><li>dbOwner角色(作用范围为admin数据库)</li><li>userAdmin角色(作用范围为admin数据库)</li><li>userAdminAnyDatabase角色</li></ul><p>以下角色包含数据库所有资源的所有操作权限。</p><ul><li><strong>root</strong></li></ul><p>root角色包含角色readWriteAnyDatabase、dbAdminAnyDatabase、userAdminAnyDatabase、clusterAdmin、restore和backup联合之后所有的权限。</p><h3 id="内部角色-internal-role" tabindex="-1"><strong>内部角色(Internal Role)</strong> <a class="header-anchor" href="#内部角色-internal-role" aria-hidden="true">#</a></h3><ul><li><strong>__system</strong></li></ul><p>MongoDB将此角色授予代表集群成员的用户对象，如副本集(replica set)成员或<strong>mongos</strong>实例。该角色允许用户对于需要的数据库操作都具有相应的权限，不要将该角色授予应用程序用户或其它管理员用户。</p><h3 id="总结说明" tabindex="-1">总结说明 <a class="header-anchor" href="#总结说明" aria-hidden="true">#</a></h3><p>通过以上对内置角色的说明，总结一下较为常用的内置角色，如下表：</p><table><thead><tr><th>角色</th><th>权限描述</th></tr></thead><tbody><tr><td>read</td><td>可以读取指定数据库中任何数据。</td></tr><tr><td>readWrite</td><td>可以读写指定数据库中任何数据，包括创建、重命名、删除集合。</td></tr><tr><td>readAnyDatabase</td><td>可以读取所有数据库中任何数据(除了数据库config和local之外)。</td></tr><tr><td>readWriteAnyDatabase</td><td>可以读写所有数据库中任何数据(除了数据库config和local之外)。</td></tr><tr><td>dbAdmin</td><td>可以读取指定数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作。</td></tr><tr><td>dbAdminAnyDatabase</td><td>可以读取任何数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作(除了数据库config和local之外)。</td></tr><tr><td>clusterAdmin</td><td>可以对整个集群或数据库系统进行管理操作。</td></tr><tr><td>userAdmin</td><td>可以在指定数据库创建和修改用户。</td></tr><tr><td>userAdminAnyDatabase</td><td>可以在指定数据库创建和修改用户(除了数据库config和local之外)。</td></tr></tbody></table><h2 id="创建自定义角色" tabindex="-1">创建自定义角色 <a class="header-anchor" href="#创建自定义角色" aria-hidden="true">#</a></h2><h3 id="查看环境" tabindex="-1">查看环境 <a class="header-anchor" href="#查看环境" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这里要注意<code>imooc</code>用户是<code>imooc</code>数据库的<code>imooc</code>角色</p></div><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; show dbs;</span></span>\n<span class="line"><span style="color:#A6ACCD;">admin   0.000GB</span></span>\n<span class="line"><span style="color:#A6ACCD;">config  0.000GB</span></span>\n<span class="line"><span style="color:#A6ACCD;">imooc   0.001GB</span></span>\n<span class="line"><span style="color:#A6ACCD;">local   0.000GB</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; use imooc;</span></span>\n<span class="line"><span style="color:#A6ACCD;">switched to db imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>目前的权限情况</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; db.createRole(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        role: &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;find&quot;, &quot;update&quot;] },</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;find&quot;] },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        roles: []</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.adminCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        createRole: &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;find&quot;, &quot;update&quot;] },</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;find&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        roles: []</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="查看自定义的角色" tabindex="-1">查看自定义的角色 <a class="header-anchor" href="#查看自定义的角色" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; db.getRole(&quot;imooc&quot;, { showPrivileges: true })</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.getRoles({ rolesInfo: 1, showPrivileges: true })</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; use admin</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.runCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        rolesInfo: { role: &quot;imooc&quot;, db: &quot;admin&quot; },</span></span>\n<span class="line"><span style="color:#A6ACCD;">        showPrivileges: true</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="更新自定义的角色" tabindex="-1">更新自定义的角色 <a class="header-anchor" href="#更新自定义的角色" aria-hidden="true">#</a></h3><p>为自定义角色imooc更新集合imooc.rights的insert权限。</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; db.updateRole(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;find&quot;, &quot;update&quot;] },</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;find&quot;, &quot;insert&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        roles: []</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.adminCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        updateRole: &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;find&quot;, &quot;update&quot;] },</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;find&quot;, &quot;insert&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ],</span></span>\n<span class="line"><span style="color:#A6ACCD;">        roles: []</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="添加角色权限" tabindex="-1">添加角色权限 <a class="header-anchor" href="#添加角色权限" aria-hidden="true">#</a></h3><p>为自定义角色imooc添加集合imooc.rights的remove权限。</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">db.grantPrivilegesToRole(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    [</span></span>\n<span class="line"><span style="color:#A6ACCD;">        { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;remove&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; use admin</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.runCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        grantPrivilegesToRole: &quot;imooc&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;rights&quot; }, actions: [&quot;remove&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="删除角色" tabindex="-1">删除角色 <a class="header-anchor" href="#删除角色" aria-hidden="true">#</a></h3><p>为自定义角色imooc收回集合imooc.users的update权限。</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; db.revokePrivilegesFromRole(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &quot;imooc&quot;, </span></span>\n<span class="line"><span style="color:#A6ACCD;">    [</span></span>\n<span class="line"><span style="color:#A6ACCD;">        { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;update&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; use admin</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.runCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    { </span></span>\n<span class="line"><span style="color:#A6ACCD;">        revokePrivilegesFromRole: &quot;imooc&quot;, </span></span>\n<span class="line"><span style="color:#A6ACCD;">        privileges: [</span></span>\n<span class="line"><span style="color:#A6ACCD;">            { resource: { db: &quot;imooc&quot;, collection: &quot;users&quot; }, actions: [&quot;update&quot;] }</span></span>\n<span class="line"><span style="color:#A6ACCD;">        ] </span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="创建用户并分配角色" tabindex="-1">创建用户并分配角色 <a class="header-anchor" href="#创建用户并分配角色" aria-hidden="true">#</a></h2><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">db.createUser(</span></span>\n<span class="line"><span style="color:#A6ACCD;">  {</span></span>\n<span class="line"><span style="color:#A6ACCD;">    user: &quot;admin&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    pwd: &quot;123456&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    roles: [ { role: &quot;dbOwner&quot;, db: &quot;imooc&quot; } ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">  }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="查看用户信息" tabindex="-1">查看用户信息 <a class="header-anchor" href="#查看用户信息" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.getUser(&quot;admin&quot;, { showPrivileges: true })</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.getSiblingDB(&quot;imooc&quot;).runCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        usersInfo: &quot;admin&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        showPrivileges: true</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="为用户添加角色" tabindex="-1">为用户添加角色 <a class="header-anchor" href="#为用户添加角色" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.grantRolesToUser(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    &quot;admin&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    [</span></span>\n<span class="line"><span style="color:#A6ACCD;">        { role: &quot;dbOwner&quot;, db: &quot;imooc&quot; }</span></span>\n<span class="line"><span style="color:#A6ACCD;">    ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">// 或</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.runCommand(</span></span>\n<span class="line"><span style="color:#A6ACCD;">    {</span></span>\n<span class="line"><span style="color:#A6ACCD;">        grantRolesToUser: &quot;admin&quot;,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        roles:</span></span>\n<span class="line"><span style="color:#A6ACCD;">            [</span></span>\n<span class="line"><span style="color:#A6ACCD;">                { role: &quot;dbOwner&quot;, db: &quot;imooc&quot; }</span></span>\n<span class="line"><span style="color:#A6ACCD;">            ]</span></span>\n<span class="line"><span style="color:#A6ACCD;">    }</span></span>\n<span class="line"><span style="color:#A6ACCD;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="删除用户" tabindex="-1">删除用户 <a class="header-anchor" href="#删除用户" aria-hidden="true">#</a></h3><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.dropUser(&quot;admin&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="更改用户密码" tabindex="-1">更改用户密码 <a class="header-anchor" href="#更改用户密码" aria-hidden="true">#</a></h2><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; use imooc</span></span>\n<span class="line"><span style="color:#A6ACCD;">&gt; db.changeUserPassword(&quot;admin&quot;, &quot;long-random-password&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="开启mongodb的访问控制" tabindex="-1">开启MongoDB的访问控制 <a class="header-anchor" href="#开启mongodb的访问控制" aria-hidden="true">#</a></h2><p>要开启访问控制，则需要在mongod进程启动时加上选项<code>--auth</code>或在启动配置文件加入选项<code>auth=true</code>，并重启mongodb实例（使用docker开启的同学不用管）</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#676E95;">## mongod配置文件如下</span></span>\n<span class="line"><span style="color:#676E95;"># cat mongodb.cnf </span></span>\n<span class="line"><span style="color:#A6ACCD;">journal=true</span></span>\n<span class="line"><span style="color:#A6ACCD;">dbpath=/data/mongodb/4.0/data</span></span>\n<span class="line"><span style="color:#A6ACCD;">directoryperdb=true</span></span>\n<span class="line"><span style="color:#A6ACCD;">fork=true</span></span>\n<span class="line"><span style="color:#A6ACCD;">port=27017</span></span>\n<span class="line"><span style="color:#A6ACCD;">logpath=/data/mongodb/4.0/logs/mongodb.log</span></span>\n<span class="line"><span style="color:#A6ACCD;">quiet=true</span></span>\n<span class="line"><span style="color:#A6ACCD;">bind_ip_all=true</span></span>\n<span class="line"><span style="color:#A6ACCD;">auth=true</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;">## 启动mongodb实例</span></span>\n<span class="line"><span style="color:#676E95;"># mongod -f mongodb.cnf </span></span>\n<span class="line"><span style="color:#A6ACCD;">about to fork child process, waiting </span><span style="color:#89DDFF;">until</span><span style="color:#A6ACCD;"> server is ready </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> connections.</span></span>\n<span class="line"><span style="color:#A6ACCD;">forked process: 44347</span></span>\n<span class="line"><span style="color:#A6ACCD;">child process started successfully, parent exiting</span></span>\n<span class="line"></span></code></pre></div>',111);const u=s(i,[["render",function(s,e,o,t,r,i){const u=p("VueJobs");return n(),a("div",null,[c,l(u),d])}]]);export{r as __pageData,u as default};
