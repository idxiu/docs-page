import{_ as s,o as a,c as n,b as p,d as e,e as l,a as t,r as c}from"./app.399c4537.js";const o=JSON.parse('{"title":"环境配置","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"本地环境","slug":"本地环境","link":"#本地环境","children":[]},{"level":2,"title":"tsc 的安装与使用","slug":"tsc-的安装与使用","link":"#tsc-的安装与使用","children":[]},{"level":2,"title":"线上环境","slug":"线上环境","link":"#线上环境","children":[]}],"relativePath":"doc/basic/ts/01-环境配置.md","lastUpdated":1663312337000}'),r={name:"doc/basic/ts/01-环境配置.md"},i=e("h1",{id:"环境配置",tabindex:"-1"},[l("环境配置 "),e("a",{class:"header-anchor",href:"#环境配置","aria-hidden":"true"},"#")],-1),d=t('<h2 id="本地环境" tabindex="-1">本地环境 <a class="header-anchor" href="#本地环境" aria-hidden="true">#</a></h2><p><code>.ts</code> 文件是不可以直接执行的，需要编译为 <code>.js</code> 文件，才能够进行运行。那现在就开始配置 TypeScript 的环境吧。</p><h2 id="tsc-的安装与使用" tabindex="-1">tsc 的安装与使用 <a class="header-anchor" href="#tsc-的安装与使用" aria-hidden="true">#</a></h2><p>tsc 是 <code>typescript compiler</code> 的缩写，即 ts 的编译器。</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#676E95;"># npm 全局安装 TypeScript</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ npm install typescript -g</span></span>\n<span class="line"></span></code></pre></div><p>现在，你可以尝试输入如下指令来检查 ts 环境的工作情况</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#676E95;"># 检查是否存在 tsc 环境变量，配置正确时会回应tsc的版本号</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ tsc -v</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;"># 尝试创建ts文件并写入一些内容</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ touch demo.ts </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">console.log(&quot;Hello ts!&quot;)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> demo.ts</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;"># 将ts文件编译为同名js文件后运行</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ tsc demo.ts </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> node demo.js</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;"># 将当前目录下所有文件编译为同名js文件</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ tsc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"></span></code></pre></div><p>上方的例子分为了两步（先转换在运行），可以通过 npm（ts-node），来进行合并操作：</p><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">$ npm install ts-node -g</span></span>\n<span class="line"><span style="color:#676E95;"># 直接进行运行</span></span>\n<span class="line"><span style="color:#A6ACCD;">$ ts-node demo.ts</span></span>\n<span class="line"></span></code></pre></div><h2 id="线上环境" tabindex="-1">线上环境 <a class="header-anchor" href="#线上环境" aria-hidden="true">#</a></h2><p><a href="https://www.typescriptlang.org/play" target="_blank" rel="noreferrer">官方的 playground</a></p><p><img src="/docs-page/assets/image-20210503183210347.17587791.png" alt="image-20210503183210347"></p>',12);const h=s(r,[["render",function(s,e,l,t,o,r){const h=c("VueJobs");return a(),n("div",null,[i,p(h),d])}]]);export{o as __pageData,h as default};
