import{_ as s,o as l,c as a,b as e,d as n,e as t,a as o,r as i}from"./app.b322fe29.js";const p=JSON.parse('{"title":"代码Commit规范","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"格式","slug":"格式","link":"#格式","children":[{"level":3,"title":"type 规则（必填）","slug":"type-规则（必填）","link":"#type-规则（必填）","children":[]},{"level":3,"title":"scope 规则（必填）","slug":"scope-规则（必填）","link":"#scope-规则（必填）","children":[]},{"level":3,"title":"subject 规则（必填）","slug":"subject-规则（必填）","link":"#subject-规则（必填）","children":[]},{"level":3,"title":"body 规则（选填）","slug":"body-规则（选填）","link":"#body-规则（选填）","children":[]},{"level":3,"title":"footer 规则（选填）","slug":"footer-规则（选填）","link":"#footer-规则（选填）","children":[]}]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]}]},{"level":2,"title":"其他事项","slug":"其他事项","link":"#其他事项","children":[]}],"relativePath":"about/vuepress/03-commit规范.md","lastUpdated":1663311966000}'),c={name:"about/vuepress/03-commit规范.md"},r=n("h1",{id:"代码commit规范",tabindex:"-1"},[t("代码Commit规范 "),n("a",{class:"header-anchor",href:"#代码commit规范","aria-hidden":"true"},"#")],-1),d=o('<h2 id="格式" tabindex="-1">格式 <a class="header-anchor" href="#格式" aria-hidden="true">#</a></h2><p>Commit 规范采用常用的 <a href="https://github.com/angular/angular" target="_blank" rel="noreferrer">Angular</a> 团队所使用的规范，具体如下：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&lt;type&gt;&lt;scope&gt;: &lt;subject&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;空行&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;body&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;空行&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">&lt;footer&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="type-规则（必填）" tabindex="-1">type 规则（必填） <a class="header-anchor" href="#type-规则（必填）" aria-hidden="true">#</a></h3><p>type 代表本次 commit 的类型，有且仅有如下几种：</p><ul><li><strong>feat</strong> - 功能性更新</li><li><strong>fix</strong> - bug 修复</li><li><strong>style</strong> - 改变代码格式（如删除空行、格式化代码、去除不必要的分号等等）</li><li><strong>refactor</strong> - 既不是功能更新也不是 bug 修复的更改（建议对代码进行重构的时候使用）</li><li><strong>perf</strong> - 代码改变提高了性能</li><li><strong>test</strong> - 添加测试用例或者修改测试用例</li><li><strong>build</strong> - 由打包工具造成的改变（如gulp、webpack编译文件）</li><li><strong>chore</strong> - 既不是源码的修改，也不是测试用例的修改（修改项目相关配置时可以使用）</li><li><strong>revert</strong> - 撤销之前的提交</li></ul><h3 id="scope-规则（必填）" tabindex="-1">scope 规则（必填） <a class="header-anchor" href="#scope-规则（必填）" aria-hidden="true">#</a></h3><p>scope 代表本次 commit 的影响范围，暂定规则如下：</p><ul><li>本次 commit 修改的<strong>组件</strong></li><li>本次 commit 修改的<strong>文件</strong></li><li>本次 commit 修改的<strong>文件夹</strong></li></ul><blockquote><p>注意：</p><ul><li>选取时从上往下匹配</li><li>组件名称应使用大写字母开头，多个单词每个单词都以大写开头</li><li>文件名应包含完整后缀，如<code>index.js</code>、<code>.eslintrc.json</code></li></ul></blockquote><h3 id="subject-规则（必填）" tabindex="-1">subject 规则（必填） <a class="header-anchor" href="#subject-规则（必填）" aria-hidden="true">#</a></h3><p>用一句简短的话描述本次修改的内容，<strong>不要超过30个汉字</strong>，<strong>以动词开头</strong></p><p>建议选用如下动词：</p><ul><li>新增（组件、属性、事件、API）</li><li>删除</li><li>修正</li><li>修复</li><li>修改</li></ul><p>正确示例：</p><ul><li>新增 Collapse 组件</li><li>新增 top 属性</li><li>删除 color 属性</li><li>修复 direction 属性不生效的问题</li><li>修正 column 属性拼写</li></ul><blockquote><p>注意：</p><ul><li><p>subject 应该仔细斟酌，fix 和 feat 类型的 commit 的 subject 将会出现在更新日志中，</p><p>所以书写时应考虑这句话出现在更新日志中是否合适</p></li><li><p>subject 中不要包含组件名或者文件名，因为 scope 中已有对应名称</p></li></ul></blockquote><h3 id="body-规则（选填）" tabindex="-1">body 规则（选填） <a class="header-anchor" href="#body-规则（选填）" aria-hidden="true">#</a></h3><p>如果 subject 无法对本次 commit 进行清楚的阐释，则在 body 中进行补充说明。</p><p>建议填写以下内容：</p><ul><li>为什么进行本次修改</li><li>本次修改了哪些内容</li><li>修改后的影响有哪些</li></ul><blockquote><p>body 需要注意换行问题，不要写在一行不换行，建议在50个字以内进行断句换行。</p></blockquote><h3 id="footer-规则（选填）" tabindex="-1">footer 规则（选填） <a class="header-anchor" href="#footer-规则（选填）" aria-hidden="true">#</a></h3><p>footer 中只填写两种内容：</p><ol><li><p>这次 commit 和某个 issue 相关联，提交后能关闭该 issue，则填写：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">close #748</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>或者</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">fix #745</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li><li><p>这次 commit 有不兼容上个版本的代码，则以<code>BREAKING CHANGE: </code>开头填写不兼容信息，如下：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">BREAKING CHANGE: Message组件top属性单位由px改为rpx</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li></ol><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><p>一个<strong>完整规范且正确</strong>的 Commit 示例如下：</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">fix(NoticeBar)：修改top属性单位为rpx</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">NoticeBar组件的top属性单位之前为px，会出现无法自适应的问题。</span></span>\n<span class="line"><span style="color:#A6ACCD;">更改为rpx后可对屏幕进行自适应。</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">BREAKING CHANGE: Notice-Bar组件top属性单位由px改为rpx</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span>\n<span class="line"><span style="color:#A6ACCD;">Close #745</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>推荐 commit 规范信息生成插件</p><ul><li>WebStorm - <a href="https://plugins.jetbrains.com/plugin/9861-git-commit-template" target="_blank" rel="noreferrer">Git Commit Template</a></li><li>Vs Code - <a href="https://github.com/Mongkii/Commit-Tagger" target="_blank" rel="noreferrer">Commit Tagger</a></li></ul></blockquote><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><ol><li><p><code>subject</code>描述中出现组件名称</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">feat(Button): Button 组件新增 size 属性</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>因type（括号中的内容）已经指定了组件，所以 subject 描述信息中无需再指明组件</strong></p></li><li><p>单词未添加空格</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">feat(Button): 新增size属性</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>为了生成的 changelog 的可读性，所有的单词左右都需要添加一个空格</strong></p></li><li><p>feat、fix 类型需要慎重使用</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">feat(Card): 更新 validator 校验器校验规则</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>因为 feat 和 fix 类型的 commit 信息会出现在 changelog 中，所以要保证这条信息是面向用户的。如上例所示，因为 validator 仅是我们自己内部使用，并不面向用户，所以用户并不关心这个校验器的新增功能。建议使用 chore 代替此处的 feat（chore 的意思是琐碎的事务）</strong></p></li></ol><h2 id="其他事项" tabindex="-1">其他事项 <a class="header-anchor" href="#其他事项" aria-hidden="true">#</a></h2><p>一个 commit 应该是一个有意义的 commit</p><p><strong>有意义</strong>的定义如下：</p><ul><li>新增了一个功能或组件</li><li>修复了一个bug</li><li>解决了一个issue</li><li>重构了某个组件或文件</li><li>改善了现有代码的构建流程或风格</li></ul><p><strong>无意义</strong>的定义如下：</p><ul><li>临时工作进度保存</li><li>误提交的 commit</li><li>commit 信息不规范或缺失</li><li>subject 无法准确描述此次 commit</li></ul><blockquote><p><strong>注意</strong>：一个 commit 的提交应该保证代码的可运行性和完整性。</p><ul><li>可运行性：commit 提交后，运行代码不能报错</li><li>完整性：commit 提交后，当前代码中不能包含缺失的功能（如某个功能做了一半就提交）</li></ul></blockquote>',38);const u=s(c,[["render",function(s,n,t,o,p,c){const u=i("VueJobs");return l(),a("div",null,[r,e(u),d])}]]);export{p as __pageData,u as default};
