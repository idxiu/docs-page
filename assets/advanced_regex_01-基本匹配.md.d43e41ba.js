import{_ as e,o as a,c as r,b as t,d as o,e as d,a as c,r as n}from"./app.399c4537.js";const s=JSON.parse('{"title":"1. 基本匹配","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/regex/01-基本匹配.md","lastUpdated":1663312337000}'),p={name:"advanced/regex/01-基本匹配.md"},h=o("h1",{id:"_1-基本匹配",tabindex:"-1"},[d("1. 基本匹配 "),o("a",{class:"header-anchor",href:"#_1-基本匹配","aria-hidden":"true"},"#")],-1),_=c('<p>正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。 例如：一个正则表达式 <code>the</code>，它表示一个规则：由字母<code>t</code>开始，接着是<code>h</code>，再接着是<code>e</code>。</p><pre>&quot;the&quot; =&gt; The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.\n</pre><p><a href="https://regex101.com/r/dmRygT/1" target="_blank" rel="noreferrer">在线练习</a></p><p>正则表达式<code>123</code>匹配字符串<code>123</code>。它逐个字符的与输入的正则表达式做比较。</p><p>正则表达式是大小写敏感的，所以<code>The</code>不会匹配<code>the</code>。</p><pre>&quot;The&quot; =&gt; <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.\n</pre><p><a href="https://regex101.com/r/1paXsy/1" target="_blank" rel="noreferrer">在线练习</a></p>',7);const g=e(p,[["render",function(e,o,d,c,s,p){const g=n("VueJobs");return a(),r("div",null,[h,t(g),_])}]]);export{s as __pageData,g as default};
